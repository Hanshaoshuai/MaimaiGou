<?php

/**
 *
 * User: zhouyouth
 * Date: 2017/3/27
 * Time: 10:29
 */
class UserController extends ApiController {

    public function init() {
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function indexAction() {
        return false;
    }

    public function registerAction() {
        $data['phone'] = $this->getPost("phone");
        $pwd = $this->getPost("password");
        $check_code = $this->getPost("check_code");

        if (empty($check_code)) {
            $data = array('code' => '1009', "msg" => "验证码不能为空");
            print_r(json_encode($data));
            die;
        }
        if (!isset($_SESSION['check_code'])) {
            $check_code_true = "";
        } else {
            $check_code_true = $_SESSION['check_code'];
        }
        //临时判断  （用于pc测试）
        if( $data['phone']!="18146746126"){
            if (strtolower($check_code) != strtolower($check_code_true)) {
                $data = array('code' => '1010', "msg" => "验证码错误");
                print_r(json_encode($data));
                die;
            }
        }
        $profile['inviteCode'] = $this->getPost("tuiphone");
        if (empty($profile['inviteCode'])) {
            $profile['inviteCode'] = "0";
            $data['parentId'] = 0;
            $data['provinces'] = "浙江省";
            $data['urban'] = "杭州市";
            $data['county'] = "西湖区";
        }else{
            $where = array("phone"=>$profile['inviteCode']);
            $field = "id,groupId,parentId,phone,provinces,urban,county,type";
            $invite_data = UserModel::userInfo($where,$field);
            if($invite_data){
                $data['parentId'] = $invite_data['id'];
                $data['provinces'] = $invite_data['provinces'];
                $data['urban'] = $invite_data['urban'];
                $data['county'] = $invite_data['county'];
            }else{
                $data['parentId'] = 0;
                $data['provinces'] = "浙江省";
                $data['urban'] = "杭州市";
                $data['county'] = "西湖区";
                $profile['inviteCode'] = 0;
            }
        }
        $pw = md5($pwd . 'erew23423428899oppooo43534');
        $data['password'] = $pw;
        if (!$data['phone'] || !$data['password']) {
            $data = array('code' => '1006', "msg" => "phone or password  is null ");
            print_r(json_encode($data));
            die;
        }
        $data['ctime']=time();
        $user = new UserModel();
        $res = $user->register($data, $profile);
        if (!$res) {
            $data = array('code' => '1007', "msg" => " register fail ");
            print_r(json_encode($data));
            die;
        }

        $data = array('code' => '1000', "msg" => " register success ");
        print_r(json_encode($data));
        return false;
    }

    public function loginAction() {
        $tel = $this->getRequest()->getPost("phone");
        $pwd = $this->getRequest()->getPost("password");
        $mobid = $this->getRequest()->getPost("mobid");
        $user = new UserModel();
        $res = $user->checklogin($tel, $pwd);
        if (!$res) {
            $data = array('code' => '1003', "msg" => "phone or password  is not correct!");
            print_r(json_encode($data));
            die;
        }
//      var_dump($res[0]['id']);exit;
        //登入成功生成token
        $strr = md5(uniqid(md5(microtime(true)), true));  //生成一个不会重复的字符串
        $str['token'] = sha1($strr);  //加密
        $str['user_id'] = $res[0]['id'];
        $str['device_number'] = $mobid;
        $data = $user->insertToken($str);
        //存储登录信息
        $loginInfo=array('last_login_ctime'=>time(),'last_login_ip'=>$mobid);
        $result=UserModel::updataUserProfile($loginInfo,$str['user_id']);

        $res = array();
        $res[] = $data;
        $this->apiReturn($res, 1000, 'success');
        $data = array('code' => '1000', "msg" => "login success!");
        print_r(json_encode($data));
        return false;
    }

    public function smsAction() {
        header("Access-Control-Allow-Origin: *");
        $tel = $this->getRequest()->getPost("phone");
        if (empty($tel)) {
            $this->apiReturn(array(), 1009, "手机号码不能为空");
        }
        //session_id($tel);
        //$vc = $this->getSession("imgCode");
        //$this->unsetSession("imgCode");
        //$mImgCode = $this->getRequest()->getPost("uImgCode");
        //if (empty($mImgCode)) {
        //    $this->apiReturn(array(), 1009, "验证码不能为空");
       // }
       // if (strtolower($mImgCode) !== strtolower($vc)) {
       //     $this->apiReturn(array(), 1009, " uImgCode is  not the same as server,   sent fail!");
      //  }
        $url = "http://smsapi.dtcms.net/httpapi/?";

        // $verifyCode = $this->getRequest()->getPost("verifyCode");
        $pwd = md5("hz2017.");
        $verifyCode = mt_rand(1002, 9999);
        $content = "您的验证码为:" . $verifyCode . ",请五分钟内输入.";
        ;
        $_SESSION['check_code'] = $verifyCode;
        $data = array("cmd" => "tx", "pass" => "1", 'uid' => 'mmg_2017', 'pwd' => $pwd, 'mobile' => $tel, 'content' => $content);
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_HEADER, false);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_TIMEOUT, 20); //设置请求超时时间 秒
        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);
        {
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
            curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);
        }
        if ($this->getRequest()->getMethod() == 'POST') {
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, http_build_query($data));
        }
        $result = substr(curl_exec($ch), 0, 3);
        if ($result == "100") {
            $this->apiReturn($verifyCode = "", 1000, " sent short message success!");
        } else {
            $this->apiReturn($result, 1008, $msg = "sms fail!");
        }
        curl_close($ch);
//        return $result;
    }

    public function mobineImgCodeAction() {
        header("Access-Control-Allow-Origin: *");
        $imgCode = $this->getPost("imgCode");
        $phone = $this->getPost("phone");
        if (empty($phone)) {
            $this->apiReturn('', 10010, "phone is null!");
        }
        $_SESSION["imgCode_" . $phone] = $imgCode; //存验证码
        session_id($phone);
        $imgCode = $_SESSION["imgCode_" . $phone];
        if (empty($imgCode)) {
            $this->apiReturn($data = "", 10010, "imgCode is null!");
        }
        $this->setSession("imgCode", $imgCode);
        $data = $this->getSession("imgCode");
        if (empty($data)) {
            $this->apiReturn($data, 10010, "server  save code fail!");
        }
        $this->apiReturn($data, 1000, "success!");
    }

    public function resetPasswordAction() {
        $data['phone'] = $this->getRequest()->getPost("phone");
        $data['password'] = $this->getRequest()->getPost("password");
        if (!$data['phone'] || !$data['password']) {
            $data = array('code' => '1006', "msg" => "phone or password  is null ");
            print_r(json_encode($data));
            die;
        }
        $check_code = $this->getPost("check_code");
        if (empty($check_code)) {
            $data = array('code' => '1001', "msg" => " check_code is null ");
            print_r(json_encode($data));
            die;
        }
        $check_code_true = $_SESSION['check_code'];

        //临时判断  （用于pc测试）
        if( $data['phone']!="18146746126"){
            if (strtolower($check_code) != strtolower($check_code_true)) {
                $data = array('code' => '1010', "msg" => "验证码错误");
                print_r(json_encode($data));
                die;
            }
        }
        $model = new UserModel();
        $res = $model->restPwd($data);
        if (!$res) {
            $this->apiReturn((object) array(), 1004, "reset password fail!");
        }
        $this->apiReturn((object) array(), 1000, "reset password success!");
    }

    //设置默认地址
    public function updataDefaultAddressAction() {
        $this->verifyLogin();
        $address_id = $this->get("address_id");
        $res = UserModel::updataDefaultAddress($address_id, $this->user_id);
        if (!$res) {
            $this->apiReturn((object) array(), 1004);
        }
        $this->apiReturn((object) array(), 1000);
    }

    //删除收货地址
    public function deleltAddressAction() {
        $this->verifyLogin();
        $address_id = $this->getPost("address_id");
        $result = UserModel::deleltAddress($address_id, $this->user_id);
        if ($result) {
            $code = 1000;
            $data = (object) array();
        } else {
            $code = 1004;
            $data = (object) array();
        }
        $this->apiReturn($data, $code);
    }

    //添加，修改收货地址
    public function updateUserAddresseAction() {
        $this->verifyLogin();
        $where = array("user_id" => $this->user_id);
        $count = UserModel::getAddressList("", "", $where, true);
        if ($count > 20) {
            $data = (object) array();
            $code = 2008;
            $msg = "收货地址最多只能添加20条";
            $this->apiReturn($data, $code, $msg);
        }
        $post_data = $this->getPost();
        $address_id = $this->get("address_id");
        if (isset($post_data['dosubmit'])) {  //提交数据
            if (isset($post_data["delivery_name"]) && $post_data["delivery_name"]) {
                if (get_str_length($post_data["delivery_name"]) >= 15) {
                    $data = (object) array();
                    $code = 2001;
                    $msg = "收货人姓名需小于15个字符！";
                    $this->apiReturn($data, $code, $msg);
                }
            } else {
                $code = 1001;
                $msg = "请填写收货人姓名";
                $data = (object) array();
                $this->apiReturn($data, $code, $msg);
            }
            if (isset($post_data["delivery_phone"]) && $post_data["delivery_phone"]) {
                if (get_str_length($post_data["delivery_phone"]) >= 12) {
                    $data = (object) array();
                    $code = 2002;
                    $msg = "收货人电话需小于12个字符！";
                    $this->apiReturn($data, $code, $msg);
                }
            } else {
                $code = 1001;
                $msg = "请填写收货人电话";
                $data = (object) array();
                $this->apiReturn($data, $code, $msg);
            }
            if (isset($post_data["delivery_province"]) && $post_data["delivery_province"]) {
                if (get_str_length($post_data["delivery_province"]) >= 15) {
                    $data = (object) array();
                    $code = 2003;
                    $msg = "收货人省份需小于15个字符！";
                    $this->apiReturn($data, $code, $msg);
                }
            } else {
                $code = 1001;
                $data = (object) array();
                $msg = "请填写收货人省份";
                $this->apiReturn($data, $code, $msg);
            }
            if (isset($post_data["delivery_urban"]) && $post_data["delivery_urban"]) {
                if (get_str_length($post_data["delivery_urban"]) >= 15) {
                    $data = (object) array();
                    $code = 2004;
                    $msg = "收货人市需小于15个字符！";
                    $this->apiReturn($data, $code, $msg);
                }
            } else {
                $code = 1001;
                $data = (object) array();
                $msg = "请填写收货人市";
                $this->apiReturn($data, $code, $msg);
            }
            if (isset($post_data["delivery_address"]) && $post_data["delivery_address"]) {
                if (get_str_length($post_data["delivery_address"]) >= 50) {
                    $data = (object) array();
                    $code = 2006;
                    $msg = "详细地址过长！";
                    $this->apiReturn($data, $code, $msg);
                }
            } else {
                $code = 1001;
                $data = (object) array();
                $msg = "请填写收货人详细地址";
                $this->apiReturn($data, $code, $msg);
            }
            if (isset($post_data["is_default"]) && $post_data["is_default"]) {
                $post_data["is_default"] = 1;
            }
            if ($id = UserModel::updateUserAddress($this->user_id, $post_data)) {
                $code = 1000;
                $data = array("id" => $id);
            } else {
                $code = 1004;
                $data = (object) array();
            }
        } else {   //编辑或者添加页面
            if ($address_id) {
                $data = UserModel::getAddressById($address_id);
                if ($data) {
                    $code = 1000;
                } else {
                    $code = 1004;
                }
            } else {
                $data = (object) array();
                $code = 1000;
            }
        }
        $this->apiReturn($data, $code);
    }

    //获取收货地址列表
    public function getaddresslistAction() {
        $this->verifyLogin();
        /*
         * $params = $this->getParams();
          $page = !empty($params["page"]) ? $params["page"] : 1;
          $pageSize = !empty($params["pageSize"]) ? $params["pageSize"] : 10;
          $start = ($page - 1) * $pageSize;
         */
        $where = array("user_id" => $this->user_id);


        $count = UserModel::getAddressList("", "", $where, true);
        $infoList = UserModel::getAddressList("", "", $where);

        if ($infoList) {
            $code = 1000;
            $data = array(
                "count" => $count,
                "infoList" => $infoList,
            );
        } else {
            $code = 1004;
            $data = (object) array();
        }
        $this->apiReturn($data, $code);
    }

    //我的资产
    public function userAssetsInfoAction() {
        $this->verifyLogin();
        $user_profile = UserModel::getUserProfile($this->user_id);
        if ($user_profile) {
            $reflect_maidou = $user_profile['reflect_maidou'];   //可转出麦豆
            $spend_maidou = $user_profile['spend_maidou'] + $user_profile['frozen_maidou'];      //可消费麦豆=消费麦豆+冻结麦豆数

            $assets = $reflect_maidou + $spend_maidou + $user_profile['performance_maidou']; //总资产=可消费麦豆+转出麦豆+代理商业绩+超市营业额
            $daymaidou_arr = UserModel::getDayMaidou($this->user_id);  //当日获得麦豆数
            $where = array("user_id" => $this->user_id, "status" => 1);
            $coupon_num = CouponModel::getCoupon("", "", $where, true);
            $assets = $assets ? $assets : 0;
            $daymaidou = $daymaidou_arr['daymaidou'] ? $daymaidou_arr['daymaidou'] : 0;
            $reflect_maidou = $reflect_maidou ? $reflect_maidou : 0;
            $spend_maidou = $spend_maidou ? $spend_maidou : 0;
            $coupon_num = $coupon_num ? $coupon_num : 0;
            $data = array("assets" => $assets, "daymaidou" => $daymaidou, "reflect_maidou" => $reflect_maidou, "spend_maidou" => $spend_maidou, "coupon_num" => $coupon_num);
            $code = 1000;
        } else {
            $code = 1004;
            $data = (object) array();
        }
        $this->apiReturn($data, $code);
    }

    //我的页面用户信息(移动到User)
    public function getMyInfoAction() {
        //$this->verifyLogin();   //我的信息页面暂时不判断登陆
        $params['uid'] = $this->user_id;
        if (!empty($params['uid'])) {
            $O_mod = new UserModel();
            $user = $O_mod->getUserInfo($params);
            //待付款订单数
            $Payment_num = $user['Payment_num'];
            //待收货订单数
            $Shipping_num = $user['Shipping_num'];
            //待评论订单数
            $commet_num = $user['commet_num'];
            //待发货订单数
            $shipment_num = $user['shipment_num'];
            foreach ($user['info'] as $v) {
                $MyInfo['username'] = $v['phone'];
                $MyInfo['area'] = $v['provinces'] . $v['urban'] . $v['county'];
                /*  if($v['type']==0){
                  $MyInfo['type']="普通用户";
                  }elseif ($v['type']==1){
                  $MyInfo['type']="VIP";
                  }else {
                  $MyInfo['type']="代理商";
                  } */
                $MyInfo['type'] = $v['type'];
                $MyInfo['bindidcard'] = $v['bindidcard'];
            }
            if($user['logo']['vip_start_time']){
                $MyInfo['time'] = date('Y-m-d', $user['logo']['vip_end_time']);//1490843507
            }else{
                $MyInfo['time'] ="";
            }
            $MyInfo['logo'] = IMG_URL . $user['logo']['logo'];
            $MyInfo['Payment_num'] = $Payment_num;
            $MyInfo['Shipping_num'] = $Shipping_num;
            $MyInfo['commet_num'] = $commet_num;
            $MyInfo['shipment_num'] = $shipment_num;
        } else {
            $this->apiReturn(array('msg' => '未登录'), "1004");
        }
        $this->apiReturn($MyInfo);
    }

    //设置修改密码
    public function upPwdAction() {
       // print_r($_SESSION);die;
        //setSession('userID', 70);
        // $uid=getSession('userID')?getSession('userID'):"";
        if(isset($_SESSION['userID'])){
            $uid = getSession('userID');
        }else{
            $uid = $this->getPost("user_id");
        }
        if (empty($uid)) {
            $this->apiReturn(array('msg' => '未登录'), "1004");
        };
        $O_mod = new UserModel();
        $oldPwd = $O_mod->getPwd($uid);
        $pwd = $this->getRequest()->getPost("password");
        $nPw = $this->getRequest()->getPost("npw");
        $nPwd = $this->getRequest()->getPost("npwd");
        if (empty($pwd)) {
            return false;
        }
        $pw = md5($pwd . 'erew23423428899oppooo43534');
        if ($oldPwd['password'] == $pw) {
            if ($nPw == $nPwd) {
                $pw = md5($nPwd . 'erew23423428899oppooo43534');
                $result = $O_mod->savePwd($uid, $pw);
                if (!empty($result)) {
                    $this->apiReturn(array(), "1000");
                } else {
                    $this->apiReturn(array(), "1004");
                }
            } else {
                $this->apiReturn(array("msg" => "两次密码不一致"), "1004");
            }
        } else {
            $this->apiReturn(array("msg" => "原密码错误"), "1004");
        }
    }

    //关于麦买购
    public function mmgAction() {
        $data = array(
            'content' => "浙江麦太科技有限公司坐落于浙江大学科技园，依托其先进的互联网及商业模式研发能力， 致力于打造世界一流的资源优配平台。麦太秉承“免费经济”以及I“新零售”的商业理念，利用全球顶尖的积分互利模式，线上与线下互通，建立多产业链生态系统。
大道至简，顺势而为。麦太响应国家“大众创业，万众创新”的号召，践行“创新、关爱、 成长、共羸”为价值观，以创新为发展引擎，以关爱为相处准则，以成长为团队建设，以共赢为服务理念。作为免费经济的践行者和领头羊，以“弄潮儿向涛头立，手把红旗旗不湿的精神”让更多人享受从“免费经济”中获益。
",
        );
        if (empty($data)) {
            $this->apiReturn(array(), "1004");
        } else {
            $this->apiReturn($data, "1000");
        }
    }

    //退出登录
    public function exitAppAction() {
        if ($this->unsetSession('userID')) {
            $this->apiReturn((object) array(), "1000");
        }
    }

    //修改用户头像
    public function uploadphotoAction() {
        $this->verifyLogin();
        $info = $this->upload("", "custom", array(), "user_photo");
        $post = array();
        if (is_array($info)) {
            //上传背景图片
            if ($info) {
                if (isset($_FILES['photo']) && $_FILES['photo']['name']) {
                    $post['logo'] = $info['photo']['savename'];
                }
            } else {
                $this->error($info);
            }
        }
        if ($post) {
            $res = UserModel::updataUserProfile($post, $this->user_id);
            if ($res) {
                $data = array("logo" => IMG_URL . $post['logo']);
                $this->apiReturn($data, "1000", "上传成功！");
            }
        } else {
            $this->apiReturn((object) array(), "1004", "上传失败！");
        }
    }

}
